package com.today.goods.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.today.goods.vo.GoodsVO;
import com.today.io.db.DB;

public class GoodsDAOImpl implements GoodsDAO {

	private Connection con = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;

	@Override
	public List<GoodsVO> list() throws Exception {
		System.out.println("GoodsDAOImpl.list().......");
		// 결과 전달할(리턴) 변수 선언
		List<GoodsVO> list = null;
		try {
			// 1.db확인 연결
			con = DB.getConnection();
			System.out.println("1.2.DB확인/연결");
			// 3.sql
			// list에 이미지와 상품 이름만 출력
			String sql = "select goodsNo, fileName, name_kr, price from goods order by goodsNo desc";
			System.out.println("3. sql : " + sql);
			// 4.실행객체+데이터세팅
			pstmt = con.prepareStatement(sql);
			System.out.println("4.실행객체 데이터 세팅");
			// 5.실행
			rs = pstmt.executeQuery();
			System.out.println("5.실행완료");
			// 6.데이터저장- 위에 생성한 list 변수에 데이터 저장
			if (rs != null) {
				while (rs.next()) {
					// rs에 다음 데이터가 있으면 그 다음데이터로 포인트를 이동한다.
					if (list == null)
						list = new ArrayList<>();
					// list 가 null 이면 한번만 생성한다.

					// 데이터를 담을 vo 객체 생성하기
					GoodsVO vo = new GoodsVO();
					vo.setGoodsNo(rs.getLong("goodsNo"));
					vo.setFileName(rs.getString("fileName"));
					vo.setName_kr(rs.getString("name_kr"));
					vo.setPrice(rs.getLong("price"));
					// rs데이터를 vo에 담고 -->list에 담는다.
					list.add(vo);
				} // while
				System.out.println("6.데이터 저장");
			} // if
		} catch (Exception e) {
			e.printStackTrace();
			throw new Exception("게시판 리스트 DB처리 중 오류 발생");
		} finally {
			// 7.닫기
			DB.close(con, pstmt, rs);
			System.out.println("7.닫기성공");
		}
		return list;
	}

	@Override
	public GoodsVO view(long no) throws Exception {
		System.out.println("GoodsDAOImpl.view().......");
		// 리턴선언
		GoodsVO vo = null;
		try {
			// 1,2연결
			con = DB.getConnection();
			// 3.sql
			String sql = "select goodsNo, name_kr, name_en, goodsView, price, goodsDiv, fileName "
					+ " from goods where goodsNo = ?";
			System.out.println("1,2.연결완료, 3.sql : " + sql);
			// 4.실행객체
			pstmt = con.prepareStatement(sql);
			pstmt.setLong(1, no);
			System.out.println("4.실행객체,데이터저장");
			// 5.실행
			rs = pstmt.executeQuery();
			System.out.println("5.실행");
			// 6.데이터표시 rs->vo
			if (rs != null && rs.next()) {
				vo = new GoodsVO();
				vo.setGoodsNo(rs.getLong("goodsNo"));
				vo.setName_kr(rs.getString("name_kr"));
				vo.setName_en(rs.getString("name_en"));
				vo.setGoodsView(rs.getString("goodsView"));
				vo.setPrice(rs.getLong("price"));
				vo.setGoodsDiv(rs.getString("goodsDiv"));
				vo.setFileName(rs.getString("fileName"));
			}
			System.out.println("6.데이터표시");
		} catch (Exception e) {
			e.printStackTrace();
			throw new Exception("게시판 보기 DB처리 중 오류 발생");
		}finally {
			DB.close(con, pstmt, rs);
			System.out.println("7.닫기");
		}//try~finally 끝
		return vo;
	}//view의 끝

	@Override
	public Integer write(GoodsVO vo) throws Exception {
		System.out.println("GoodsDAOImpl.write().......");
		int result = 0;
		try {
			// 1,2.드라이버 확인, 연결 //3.sql
			con = DB.getConnection();
			String sql="insert into goods (goodsNo, goodsDiv, name_kr, name_en, goodsView, price, fileName "
					+ " values(goods_seq.nextval,?,?,?,?,?,?)";
			System.out.println("1,2.확인,연결 ,3.sql : " +sql);
			//4.실행객체,데이터 저장
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, vo.getGoodsDiv());
			pstmt.setString(2, vo.getName_kr());
			pstmt.setString(3, vo.getName_en());
			pstmt.setString(4, vo.getGoodsView());
			pstmt.setLong(5, vo.getPrice());
			pstmt.setString(6, vo.getFileName());
			System.out.println("4.실행객체,데이터저장");
			//5.실행
			result=pstmt.executeUpdate();
			System.out.println("5.실행");
			//6.데이터 표시
			System.out.println("6.1행 삽입완료");
			
		} catch (Exception e) {
			e.printStackTrace();
			throw new Exception("게시판 쓰기 DB처리 중 오류 발생");
		}finally {
			DB.close(con, pstmt, rs);
			System.out.println("7.닫기");
		}
		
		return result;
	}

	@Override
	public Integer update(GoodsVO vo) throws Exception {
		System.out.println("GoodsDAOImpl.update().......");
		return null;
	}

	@Override
	public Integer delete(long no) throws Exception {
		System.out.println("GoodsDAOImpl.delete().......");
		return null;
	}

}
