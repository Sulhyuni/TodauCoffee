package com.today.member.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import com.today.main.Execute;
import com.today.main.ServiceInterface;
import com.today.member.vo.MemberVO;
import com.webjjang.util.PageObject;

public class MemberController {

	// private으로 서비스 생성
	private ServiceInterface memberLoginService;
	private ServiceInterface memberWriteService;
	private ServiceInterface memberListService;

	// setter
	public void setMemberLoginService(ServiceInterface memberLoginService) {
		this.memberLoginService = memberLoginService;
	}
	public void setMemberWriteService(ServiceInterface memberWriteService) {
		this.memberWriteService = memberWriteService;
	}
	public void setMemberListService(ServiceInterface memberListService) {
		this.memberListService = memberListService;
	}
	
	// 실행 메서드 - return되는 String 데이터는 jsp또는 url정보가 된다.
	public String execute(HttpServletRequest request) throws Exception{
		
		System.out.println("MemberController.execute().request : " + request);
		// 어떤 요청
		String uri = request.getRequestURI();
		String method = request.getMethod();
		System.out.println("MemberController.execute().method : " + method);
		String jsp = null;
		// 처리
		switch (uri) {
		case "/member/login.do":
			System.out.println("controller");
			HttpSession session = request.getSession();
			if(request.getMethod().equals("GET")) {
				jsp="member/login";
			}else {
				MemberVO loginVO = new MemberVO();
				// 입력받은 id, pw 세팅
				loginVO.setId(request.getParameter("id"));
				loginVO.setPw(request.getParameter("pw"));
				session.setAttribute("login",Execute.run(memberLoginService, loginVO));
				if(session.getAttribute("login") == null) throw new Exception("아이디와 비밀번호를 확인해주세요");
				jsp = "redirect:/"; // main으로 자동이동
			}
			break;
		case "/member/logout.do":
			session = request.getSession();
			session.removeAttribute("login");
			session.invalidate();
			jsp = "redirect:/";
			
			break;
		case "/member/join.do":
			session = request.getSession();
			if(request.getMethod().equals("GET")) {
				jsp = "member/join";
			} else { // post
				// 데이터 수집 - id,pw 받아야 한다.
				MemberVO loginVO = new MemberVO();
				loginVO.setId(request.getParameter("id"));
				loginVO.setPw(request.getParameter("pw"));
				// 글등록 처리해 보자
				session.setAttribute("login",Execute.run(memberLoginService, loginVO)); 
				if(session.getAttribute("login") == null) throw new Exception("아이디와 비밀번호를 확인해주세요");
				jsp = "redirect:/"; // main으로 자동이동
			}
			break;
		case "/member/write.do":
			if(request.getMethod().equals("GET")) {
				jsp = "member/write";
			} else {
				// 데이터 수집
				MemberVO writeVO = new MemberVO();
				writeVO.setId(request.getParameter("id"));
				writeVO.setPw(request.getParameter("pw"));
				writeVO.setName(request.getParameter("name"));
				writeVO.setGender(request.getParameter("gender"));
				writeVO.setBirth(request.getParameter("birth"));
				writeVO.setTel(request.getParameter("tel"));
				writeVO.setEmail(request.getParameter("email"));
				// 글등록 처리해 보자
				Execute.run(memberWriteService, writeVO); 
				jsp = "redirect:/";
			}
			break;
		case "/member/list.do":
			// 페이지 정보 받기

			PageObject pageObject = PageObject.getInstance(request);
			// 리스트라고 생각을 하고 처리해 보자. -> request에 담는다.
			request.setAttribute("list", Execute.run(memberListService, pageObject));
			// jsp - 리스트 데이터 아래의 페이지 네비게이션을 위한 데이터 저장
			request.setAttribute("pageObject", pageObject);
			jsp = "member/list";
			break;
		default:
			throw new Exception("잘못된 페이지를 요청하셨습니다.");
		}
		return jsp;
		
	}
	
	
}
